class Solution {
public:
    void dfs(int node,vector<int>ad[],vector<int>&vis)
    {
        vis[node]=1;
        for(auto it:ad[node])
        {
                if(!vis[it])
                {
                    //vis[it]=1;
                    dfs(it,ad,vis);
                }
        }
    }
    int findCircleNum(vector<vector<int>>&v) {
        int n=v.size();
        int c=0;
        vector<int>ad[n+1];
        vector<int>vis(n+1,0);
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(v[i][j]==1 and i!=j)
                {
                    ad[i].push_back(j);
                    ad[j].push_back(i);
                }
            }
        }
        for(int i=0;i<n;i++)
        {
            if(!vis[i])
            {
                c+=1;
                dfs(i,ad,vis);
                   
            }
        }
        return c;
    }
};
